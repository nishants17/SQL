WITH CTE_RANK_ORDER AS(
    SELECT DISTINCT PRODUCT_ID, CHANGE_DATE, DENSE_RANK() OVER (PARTITION BY PRODUCT_ID ORDER BY CHANGE_DATE DESC) AS RN,
           CASE
                WHEN CHANGE_DATE <= '2019-08-16' THEN  NEW_PRICE
                ELSE 10
            END AS PRICE
    FROM PRODUCTS
    WHERE CHANGE_DATE <= '2019-08-16')
SELECT DISTINCT P.PRODUCT_ID, ISNULL(CTE.PRICE, 10) AS PRICE
FROM PRODUCTS P
LEFT JOIN (SELECT * FROM CTE_RANK_ORDER WHERE RN = 1) CTE
ON P.PRODUCT_ID = CTE.PRODUCT_ID
